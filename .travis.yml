language: python
sudo: required
python:
  - "2.7"
services:
  - docker
env:
  global:
    - exit_code=0
    - number_per_job=7
    - message=()
  matrix:
    - id=1
    - id=2
    - id=3
    - id=4
before_install:
  - create_resource_group() {
      name=$1;
      ansible-playbook ../create_resource_group.yml --extra-vars="name=$name";
    }
  - delete_resource_group() {
      name=$1;
      ansible-playbook ../delete_resource_group.yml --extra-vars="name=$name";
    }
  - "write_credential() { printf \"AZURE_CLIENT_ID: ${clientId}\nAZURE_SECRET: ${secret}\nAZURE_SUBSCRIPTION_ID: ${subscriptionId}\nAZURE_TENANT: ${tenant}\nRESOURCE_GROUP: $group_name\nRESOURCE_GROUP_SECONDARY: $group_name\" >> test/integration/cloud-config-azure.yml; }"
  - run_test() {
      test_name=$1;
      echo Run test $test_name;
      group_name="ansible-integration-${test_name##azure_rm_}";
      create_resource_group $group_name;
      rm test/integration/cloud-config-azure.yml;
      touch test/integration/cloud-config-azure.yml;
      write_credential;
      travis_wait 50 ansible-test integration $test_name --docker --color=yes;
      if [ $? -ne 0 ]; then
        message+=($test_name);
        export exit_code=1;
      fi

      travis_wait 50 delete_resource_group $group_name;
    }
  - scan_test() {
      end=$((id * number_per_job));
      start=$((end - number_per_job));
      liststr=test/integration/targets/azure_rm_*;
      list=($liststr);
      echo start = $start, end = $end, list_lenth = ${#list[@]};
      for (( i = $start; i < $end; i++ )); do
        if [ "$i" -lt "${#list[@]}" ]; then
          file=${list[$i]};
          name=${file##test/integration/targets/};
          run_test $name;
        fi

      done
    }
install:
  - sudo apt-get update
  - sudo apt-get install -y libssl-dev libffi-dev python-dev python-pip
  - pip install pip --upgrade
  - pip install ansible[azure]
  - mkdir ~/.azure
  - touch ~/.azure/credentials
  - printf "[default]\nsubscription_id=${subscriptionId}\nclient_id=${clientId}\nsecret=${secret}\ntenant=${tenant}" >> ~/.azure/credentials
  - git clone https://github.com/VSChina/ansible.git
  - cd ansible
  - pip install virtualenv
  - virtualenv venv
  - . venv/bin/activate
  - pip install packaging azure azure-cli
  - pip install -r requirements.txt
  - pip install -r packaging/requirements/requirements-azure.txt
  - . hacking/env-setup
script:
  - docker --version
  - scan_test
  - (>&2 echo $message)
  - exit $exit_code
