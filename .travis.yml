language: python
sudo: required
python:
  - "2.7"
env:
  global:
    - exit_code=0
before_install:
  - create_resource_group() {
      name=$1;
      ansible-playbook create_resource_group.yml --extra-vars="name=$name";
    }
  - delete_resource_group() {
      name=$1;
      ansible-playbook delete_resource_group.yml --extra-vars="name=$name";
    }
  - "write_credetial() { printf \"AZURE_CLIENT_ID: ${clientId}\nAZURE_SECRET: ${secret}\nAZURE_SUBSCRIPTION_ID: ${subscriptionId}\nAZURE_TENANT: ${tenant}\nRESOURCE_GROUP: $group_name\nRESOURCE_GROUP_SECONDARY: $group_name\" >> test/integration/cloud-config-azure.yml; }"
  - run_test() {
      test_name=$1;
      group_name="ansible-integration-${test_name##azure_rm}";
      create_resource_group $group_name;
      rm test/integration/cloud-config-azure.yml;
      touch test/integration/cloud-config-azure.yml;
      write_credential;
      ansible-test integration $test_name --docker;
      if [ $? -ne 0 ]; then
        exit_code=1;
      fi

      delete_resource_group $group_name;
    }
  - scan_test() {
      for file in "test/integration/targets/azure_rm_*"; do
        name=${file##test/integration/targets};
        run_test $name;
      done
    }
install:
  - apt-get update && apt-get install -y libssl-dev libffi-dev python-dev python-pip docker.io
  - pip install pip --upgrade
  - pip install ansible[azure]
  - mkdir ~/.azure
  - touch ~/.azure/credentials
  - printf "[default]\nsubscription_id=${subscriptionId}\nclient_id=${clientId}\nsecret=${secret}\ntenant=${tenant}" >> ~/.azure/credentials
  - git clone https://github.com/VSChina/ansible.git
  - cd ansible
  - pip install virtualenv
  - virtualenv venv
  - . venv/bin/activate
  - pip install packaging azure azure-cli
  - pip install -r requirements.txt
  - pip install -r packaging/requirements/requirements-azure.txt
  - . hacking/env-setup
script:
  - scan_test
  - exit $exit_code